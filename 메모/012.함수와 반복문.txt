함수
메인이라는 함수는 뜻 그대로 주(메인)이다 가장 핵심이 되는 것이다.

우리 프로그램의 주제는 함수의 호출이다.
우리가 프로그램을 실행시킨다는 것은 메인함수를 호출한다는 것이다.

우리가 어떤 프로그램을 사용할 때 우리가 종료한다고 하지 않으면 종료가 되지 않는다.
그냥 자동으로 꺼지는 프로그램은 흔치 않다.

거기서 어떻게 안 꺼지게 하냐면 바로 반복문을 사용한다.
그래서 함수를 배우기 전에 반복문을 배워보자
반복문: 일정 조건을 주고 그 조건에서 탈출하기 전까지 계속 반복을 시켜주는 것이다.
우리가 만들어온 코드 블록을 계속 돌려서 반복실행을 하게 해준다

반복문
반복문은 두가지 종류가 있는데
while()문과 for()문이 있다. if와 switch처럼 같은 상황을 for문으로 사용하거나 while로 사용할 수 있다. 애네 둘도 똑같은 기능이지만 어떤게 사용하는 게 좋다 하는 상황이 있다.

for문
for문의 형식은 이러하다
for (변수(반복자) 초기화;조건식(반복자 조건 체크);증감식) {

}
애도 괄호를 보유하고 있어 이 안은 또 하나의 지역이라 볼 수 있다.
int i
for(int i = 0; )
{
	i
}
여기서 위에 i를 선언을 한다면 무시되고 for안에 I가 안에서 지칭하는 I이다.

위에 for문을 코드로 예를 보여 주겠다
for (int i = 0; i < 10; ++i) 
{
	
}
위 중간식인 조건이 참이면 아래 코드가 실행이 되고 증가식으로 i가 늘어난다.
그래서 10번 반복이 된다.

앞으로 실행이 되는지 보기 위해 입출력을 배운다.
printf(); //출력
scanf(); //입력
어라? 이건 c언어에 출력과 입력이라고 할 수 있는데 c++에서 #include <stdio.h>를 헤더파일을 쓰면 사용할 수 있다.

그리고 while문을 알아보자

while문

while문 형식
while (/*조건체크*/) {

}
while문은 진짜 간단하고 자유롭다 그냥 조건만 맞으면 그 안에 반복문이 돌아간다.
실패가 들어오면 깨져서 나가게 된다.
만약 for문과 똑같게 사용하려면

int i = 0;
while (i < 2) {
	printf("Output Test\n");

	i++;
}
이렇게 사용하면 for문과 똑같은 것을 볼 수 있다.
여기서 키워드 두 가지가 있다
continue와 break 두 가지이다. for문 while문 둘 다 사용가능

continue를 사용하면 그 컨티뉴 부분에서 바로 다음 파트로 넘어간다.
만약
for (int i = 0; i < 2; ++i) 
{
	countinue;

	printf(“hello”);
}
이렇게 되어 있으면
hello가 출력되지않고 넘어간다
자세히 말하자면 countinue를 사용한 다음에 바로 다음 반복으로 넘어가 I가 증가되어서 결국 반복문이 끝날 것이다.

뭐 다른 예시를 말해보자면
짝수만 프린트하기가 있다

for (int i = 0; i < 10; ++i) 
{
	if(i % 2 == 1)
	{
		continue;
	}
	printf(“%d”, i);
}
이런식으로 하면 짝수만 출력이 되는 것을 볼 수 있다.

break
break는 그냥 만나는 순간 횟 수가 얼마나 남았든 간에 그냥 반복문이 깨져버린다.
즉 이런 경우는 반복을 더 돌 필요가 없어라고 생각 하였을 때 break를 사용하면 된다.

그래서 프로그램이 자동으로 끝나지 않게 하려면 반복문을 사용해서 이러한 조건이 아니면 끝나지 않는다라고 조건을 걸어주면 된다.