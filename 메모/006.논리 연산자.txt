논리 연산자
조건문에 사용됨

참(true)과 거짓(false)
!(역), &&(and), ||(or)등의 연산자가 있다.
!(역)연산자는 참을 거짓으로 만들고 거짓을 참으로 만듭니다.
&&(and)(곱)연산자는 양쪽의 피연산자가 모두 true라면 참이다.
||(or)(합) 양쪽의 피연산자 중 둘 중 하나라도 참 이면 참이다.

참   : true는 0이 아닌 모든 값이다.
거짓 : 0
int truefalse = true하고 쓰면 1이 들어옴 이것으로 true를 1로 본다는 것을 알 수 있음
int truefalse = false는 0을 넣는다는 것

참과 거짓 전용 자료형이 있다.
bool 자료형(정수 타입)

bool은 true, false만 나타내는 자료형이기 때문에
bool IsTrue = 100;라고 적었을 때 true라고 해석함
즉 1로 받아 들인다는 것이다.
즉 bool형은 0과 1만 받아들인다.
그래서 정수형 자료형으로 쓰기에는 문제가 있다.
사이즈는 1바이트이다.

!(역)
IsTrue = true;
IsTrue = !IsTrue;
이렇게 하면 false가 됨

int iTrue = 100;
iTrue = !iTrue; 이렇게 하면 100이 True(참)이기 때문에 0을 받아오고

int iTrue = 0;
iTrue = !iTrue; 이렇게 하면 0은 false(거짓)이기 때문에 1을 받아온다.

&&(and)
iTrue = 100 && 200; 이렇게 둘 다 참이면 참

하지만 이렇게 둘 중 하나라도 거짓이라면
iTrue = 100 && 0;
iTrue = 0 && 200;
iTrue = 0 && 0;
거짓이 나온다.

||(or)
iTrue = 100 || 200;
iTrue = 100 || 0;
iTrue = 0 || 200;
이렇게 하나라도 참이면 참이다.

iTrue = 0 || 0;
하지만 둘 다 거짓이라면 거짓이다

구문
if, else
switch case

삼항 연산자
:?
에서 쓰인다.


