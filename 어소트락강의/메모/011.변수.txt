변수

지역변수
우리는 지금 main() 함수안에 선언하고 있음
이렇게 괄호안에 선언되어있는 변수들을 다 지역변수라고 부른다.

전역변수
전역변수는 지역변수와 다르게 괄호 외부에 선언된 애들이다.

정적변수
외부변수가 있지만 외부 변수는 나중에 헤더파일 뜯어볼 때 그때 애가 왜필요한지 알게될 것이다.

이렇게 지역변수와 전역변수를 가르는 것은 함수 이다.
함수 안에 있는면 지역이고 함수 밖에 있으면 전역이다.

함수를 간단히 알아보겠다.
함수(Function) 다르게 해석하면 기능
하나의 기능을 정의 해놓는 곳이다. 기능 하나하나를 함수라고 부른다.
예로
공장에서 가장 최소단위의 기능을 만든다.
로봇팔은 여기있는걸 찍어서 저기다가 놓는 기능이다.
벨트는 0.1초 멈췄다가 가는 것도 기능이다. 이게 둘이 조합되는 순가
과자가 벨트를 타고 가다가 탁 멈췄을 때 로봇팔이 집어서 저쪽에다가 나둔다.
이렇게 이 두 기능이 합쳐져서 더 큰 기능이 나온다.
시작은 기능들이 작아도 이 작은 함수들을 모아서 큰 함수 이 큰 함수를 모아서 
더 큰 함수 이렇게 만들면 나중에 굉장히 복잡하게 말할 수 있다.
그래서 이런 작은 것들이 하나하나 모여서 만들어지면 이것이 콘텐츠가 될 수도 있는 것이다.
이렇게 천천히 쌓아 가는 것이다.
이런것을 모듈화라고 한다. 작은 기능들을 잘 만들어 놓으면
이것들이 모여서 점점 더 큰 좋은 기능을 만들어 낸다. 모듈화를 잘하는 습관을 길러야함
이렇게 우리가 모듈화를 잘 시켜둔다면 나중에 큰 기능을 만들 때
도움이 될 수가 있다.

만약 로봇팔에 잡아서 들었다 놨다를 하고 옮긴다 라는 코드가 있을 때
여기서 옮기는 것만 필요하다면 들었다 놨다를 빼고 옮기는 코드만 사용 할 수 있고
여기서 또 들었다 놨다 기능이 필요하면 옮기는 기능을 뺄 수 있다.
이것을 모듈화를 하여서 하나의 코드로 두는 것이 아니라 묘듈화로 분리해두면
이것이 필요할 때 쓸 수 있다.

이건 너무 쉬워서 코드에 쓸 수 있지만 예를 들어
data = 10 + 20 이렇게 코드에 넣는 것이 아니라.

int Add(int left, int right){
	return left + right;
}
이런 식으로 함수로 사용할 수 있다는 말이다.
그러면
data = Add(10, 20); 이런 식으로 사용 할 수 있다.

Add라는 함수안에서 선언되어있는 변수들도 지역변수이다.

정리)
괄호 안에 선언된 변수(함수,지역)는 지역변수이다.

변수명의 규칙
int iName = 0;
int iName = 100;
만약 이런 식으로 메인함수에 같은 이름의 변수를 두 개를 선언한다면
변수의 모호성이 생격서 컴파일러가 에러를 낸다.
비유를 들어보자면
대한민국이 에서 원래 하나 있어야 하는 서울이 두 개가 있는 것이다.

하지만
int iName = 0;
{
	int iName = 100;

	iName;
}
이경우는 문제가 되지 않는데 왜냐하면 우선 순위가 바뀐다는 것이다.
같은 지역의 애들을 우선시 해준다.
그런데 바깥쪽의 애들을 지칭할 때는 조금 힘들어 지지만 지칭 할 수는 있다는 것이다.
구별할 여지가 생긴 것이다.

만약에 밖에서 iName을 적는다면 밖에 있는 iName을 취한다.
왜냐하면 괄호안에 있는 변수들은 괄호 안에서만 활동 할 수 있다.
비유를 해보자면 방구석 여포라고 할 수 있다.
그리고 지역안에 지역을 또 만들 수 있다.
{
 {

 }
}