비교 연산자
==(같니), !=(다르니), <, >, >=, <= (부등호들)
참, 거짓으로 나옴


if절
형태
if(여기 부분이 참이면 밑에 중괄호안에 코드가 작동됨)
{

}
예)
data = 0;
if(0 && 100)
{
	data = 100;
}
이러면 실행이 안되고
data = 0;
if(100 && 200)
{
	data = 100;
}
이렇게 하면 수행이 된다.
그리고

data = 0;
if (0 && 200)
{
	data = 100;
}

if (data == 100) 
{
		
}
우리가 이러한 코드를 짰을 때 컴파일러에 Release모드를 사용하면 
자동으로 최적화를 하여 밑에 코드를 삭제 시켜 버린다.

하지만 반응형(입력받기)으로 만들면 어떨 때는 실행이 되고 어떨 때는 실행이 안될 것이다.
즉 가변적이라는 것이다.

else는 if가 참이면 수행이 안되고 if가 거짓이라면 수행이 됨
if()
{
	if가 참인 경우 수행
}

else
{
	if가 거짓인 경우 수행
}

else if
계속 만들 수 있음
if()
{
	
}  

else if()
{

}

else if()
{

}

else
{
	
}
else if가 여러개가 있다면 if부터 차례대로 하나씩 검사 해가면서 내려간다.
그중에 하나라도 참이 있다면 그if문만 실행하고 그 외의 if문 무시하고 넘어간다. 
만약 참이 하나도 없다면 else로 간다.

하지만 게임에서 w는 앞으로 s는 뒤로 a는 왼쪽 d는 오른쪽 이렇게 이동할 때에는
else if로 만들면 처음 입력 받은 입력받고 넘기기에 대각선이동을 못하므로
if로 끊어줘야 한다.
else는 없어도 됨



