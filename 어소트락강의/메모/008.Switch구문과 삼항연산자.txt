switch 구문
switch (변수, 상수)
{
case 원하는 수:
	break;
case 원하는 수:
	break;
default 위에께 다 충족하지 않으면 이게 실행됨:
	break;
}
예)
switch (10)
{
case 10:
	break;
case 20:
	break;
default:
	break;
}
위에 스위치 케이스를 if/else 형태로 바꾼다면
int iTest = 10;
if (iTest == 10) 
{

}
else if (iTest == 20) 
{

}
else 
{

}
이런 식이 된다.
문법적으로 큰 차이가 없음, 서로 장단점이 있음
상황에 따라서 맞게 쓰는게 맞음;

스위치문에도 변수를 넣을 수 있음
int iTest = 20;
switch (iTest)
{
case 10:
	break;
case 20:
	break;
default:
	break;
}
여기서 주의 해야할 께 iTest가 20이면 바로 case 20:구문으로 가는데
case 20:
	여기에 break;가 없다면
바로 그밑에
default:
	break;
까지 가서 break;에서 멈춘다. 그래서 default에서 적어놓은 코드도 실행이 되고 멈춤
하지만 문법오류도 아니기 때문에 찾기 힘든 버그가 생길 수 있음
그래서 스위치를 쓸 때 의도적으로 하는게 아닌 이상
break; 생각하고 코드 짜기

그래서
case 10:
case 20:
case 30:
	//코드
	break;
이렇게도 쓸 수 있음;
if로 짜면
if(iTest == 10 || iTest == 20 || iTest == 30)
{
	
}
이런 느낌임

삼항 연산자
iTest == 20 ? iTest = 100 : iTest == 200;
이렇게 사용을 하는데
솔직히 가독성이 떨어지기 때문에 별로 안쓸 것 같다.
황현민 적음